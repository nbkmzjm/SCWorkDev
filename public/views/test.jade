extends ../views/layout/layout.jade
block title 
	title Title From TEST



block content
	#container
	p(id='test') content from test
	hr
	p(id="status") Please select a file
	img(style="border:1px solid gray;width:300px;"  id="preview" src="/images/default.png")
	form(method="POST" action="/save-details")
		input(type="file" id="file-input" multiple=false size="5")
		input(type="hidden" id="avatar-url" name="avatar-url" value="/images/default.png")
		input(type="text" name="username" placeholder="Username")
		input(type="text" name="full-name" placeholder="Full name")
		input(type="submit" value="Update profile")
		
		
			
    

append scripts 

	script(src="public/js/date.js")
	script.
		$(function(){
			var formTH = document.createElement('form')
				var divTHContainer = document.createElement('div')
				divTHContainer.className = 'typeahead__container'
					var divTHField = document.createElement('div')
					divTHField.className = 'typeahead__field'
						spanTH = document.createElement('span')
						spanTH.className = 'typeahead__query'
			
							var input = document.createElement('input')
							
							//- input.placeholder = 'Search Person'
							input.className ='js-typeahead'
							//- input.id = 'friendSearch'
							input.type = 'search'
							input.name = 'q'
							//- input.setAttribute('href','#');
							//- input.setAttribute('data-toggle','popover');
							//- input.setAttribute('data-trigger','hover');
							//- input.setAttribute('data-placement','auto');
							//- input.style.fontWeight = 'bold'
							//- input.setAttribute('title', 'Selected User');
							
							//popover selected users when hovering over the input search
							//- document.addEventListener('mousemove', function(){
							//- 	input.setAttribute('data-content', JSON.stringify(userSelected, null, 4).replace(/"/g,"").replace("[","").replace("]",""));
							//- 	$('[data-toggle="popover"]').popover({html:true})
								
							//- })
							spanTH.appendChild(input)
						divTHField.appendChild(spanTH)
					divTHContainer.appendChild(divTHField)
				formTH.appendChild(divTHContainer)
			$('#container').append(formTH)
			$.typeahead({
			    input: '.js-typeahead',
			    minLength:2,
			    maxItem: 20,
			    order: "desc",
			    source: {
			        
			            // Ajax Request
			            data: [ "AfghanisTan", "Albania", "Algeria", "Andorra",  "Israel", "Italy", "Jamaica", "Japan", "Jordan"]
			        
			    },
			    callback: {
			        onInit: function (node) {
			            console.log('Typeahead Initiated on ' + node.selector);
			        }
			    }
			});
			//- var JSONdata = !{JSONdata}
			//- var vapidPub = JSONdata.vapidPub
			//- console.log('vapidPub:'+ vapidPub)
			//- function urlBase64ToUint8Array(base64String) {
			//-   const padding = '='.repeat((4 - base64String.length % 4) % 4);
			//-   const base64 = (base64String + padding)
			//-     .replace(/\-/g, '+')
			//-     .replace(/_/g, '/');
			 
			//-   const rawData = window.atob(base64);
			//-   const outputArray = new Uint8Array(rawData.length);
			 
			//-   for (let i = 0; i < rawData.length; ++i) {
			//-     outputArray[i] = rawData.charCodeAt(i);
			//-   }
			//-   return outputArray;
			//- }
			 
			//- const vapidPublicKey = vapidPub;
			//- const convertedVapidKey = urlBase64ToUint8Array(vapidPublicKey);

			//- if ('serviceWorker' in navigator && 'PushManager' in window) {
			//-   console.log('Service Worker and Push is supported');

			//-   navigator.serviceWorker.register('sw.js').then(function(swReg){
			//-     console.log('Service Worker is registered', swReg);

			//-     swRegistration = swReg;
			//-     checkSubcription();
			//-   }).catch(function(error) {
			//-     console.error('Service Worker Error', error);
			//-   });
			//- } else {
			//-   console.warn('Push messaging is not supported');
			//-   //- pushButton.textContent = 'Push Not Supported';
			//- }

			//- function checkSubcription(){
			//- 	swRegistration.pushManager.getSubscription().then(function(subscription){
					
			//- 		if(subscription==null){
			//- 		console.log('no subscription and add subscription now')
			//- 			navigator.serviceWorker.ready.then(function(serviceWorkerRegistration) {
			//- 				swRegistration.pushManager.subscribe({ 
			//- 			    	userVisibleOnly: true,
			//- 			   		applicationServerKey:convertedVapidKey
			//- 		    	}).then(function(subscription){
			//- 		    		$.post('/endpoint', {
			//- 			  		endpoint:JSON.stringify(subscription)
			//- 			  		}).done(function(){

			//- 			  		})

			//- 		  		})
			//- 			})
						
			//- 		}else{
			//- 		console.log('yes subscription and continue')
			//- 			$.post('/endpoint', {
			//- 	  			endpoint:JSON.stringify(subscription)
			//- 	  		}).done(function(){

			//- 	  		})

			//- 		}

			//- 		console.log('subscription')
			//- 		console.log(JSON.stringify(subscription))

					
			//-   	})
			//- }






			var JSONdata = !{JSONdata};
			var newP = document.createElement('input')
			newP.type = 'text'
			newP.id = 'text'
			container.appendChild(newP);

			var showBut = document.createElement('input')
			showBut.type = 'button'
			showBut.id = 'testBut'
			showBut.value = 'Show Notification'
			console.log($('#testBut'))

			container.appendChild(showBut);
			var testString = 'string'

			$('#testBut').click(function(){
				console.log($('#testBut'))

			})

			document.getElementById('file-input').addEventListener('change', function(){
				var testString = 'string'
				var files = document.getElementById('file-input').files
				

				var fileArray = $.map(files, function(file, index) {
				    return [file];
				});



				//- BASE64Decoder decoder = new BASE64Decoder();
			 //-        byte[] imgBytes = decoder.decodeBuffer(value);        
			 
			 //-       BufferedImage bufImg = ImageIO.read(new ByteArrayInputStream(imgBytes));
			 //-       File imgOutFile = new File("newLabel.png");
			 //-    ImageIO.write(bufImg, "png", imgOutFile);

				fileArray.forEach(function(file,i){
					$.post('/sign-s3', {
						fileName:file.name,
						fileType:file.type
					}).then(function(Rdata){
						console.log(Rdata.url)
						const xhr = new XMLHttpRequest();
						xhr.open('PUT', Rdata.url);
						xhr.onreadystatechange = () => {
						if(xhr.readyState === 4){
						  if(xhr.status === 200){
						    console.log('uploaded file')
						  }
						  else{
						    alert('Could not upload file.');
						  }
						}
						};
						xhr.send(file);

					})
				})

				//- var x=0;
				//- 	function uploadS3loop(arr){
				//- 		console.log(files[x])
				//- 		$.post('/sign-s3', {
				//- 			fileName:files[x].name,
				//- 			fileType:files[x].type
				//- 		}).then(function(Rdata){
				//- 			console.log(Rdata.url)
				//- 			console.log(x)
				//- 			$.ajax({
				//- 			    url: Rdata.url, // your api url
				//- 			    method: 'PUT', // method is any HTTP method
				//- 			    data: files[x], // data as js object
				//- 			    success: function() {
				//- 			    	console.log('uploaded file')
				//- 			    },
				//- 			    error: function(jqXHR, textStatus, errorThrown){

				//- 			    	console.log('can not upload file: '+textStatus+ '----'+jqXHR+'----'+errorThrown)
				//- 			    	console.log(jqXHR)
				//- 			    }
				//- 			});

				//- 		})

				//- 		x++
				//- 		x<arr.length?uploadS3loop(arr):""
				//- 	}
				
				//- uploadS3loop(files)

			})
			
			
		});





