extends ../layout/layout.jade

	
block title 
	title Users

block header
	#header
	include ../layout/header.jade

block horMenu
	include ../layout/horMenu.jade

block content
	#container
		#userContainer
			
			div(id='myModal' class='modalx' draggable='true')
				div(class="glyphicon glyphicon-remove close")
				img(id='imgModal' class='modal-content')
				iframe(id='iframeModal' class='modal-content')
			ul(class="nav nav-tabs")
				li(class="active" id='feedTab')

					a(data-toggle="tab" href="#Feed") Feeds
				li(id='RelationshipTab')
					a(data-toggle="tab"  href="#Relationships") Relationships
				li(id='ProfileTab')
					a(data-toggle="tab"  href="#Profile") Profile
				li(id='TagManagerTab')
					a(data-toggle="tab"  href="#TagManager") Tag Manager
				li(	id='SettingTab')
					a(data-toggle="tab"  href="#Setting") Setting

			div(class="tab-content")
				div(id="Feed" class="tab-pane fade in active")
					

				div(id="Profile" class="tab-pane")
				div(id="Relationships" class="tab-pane")
				div(id="Setting" class="tab-pane")
				div(id="TagManager" class="tab-pane")

append scripts 
	script(src="public/fnLib/feedFn.js")
	script(src="public/fnLib/tagSaveFn.js")
	script(src="node_modules/jquery.iframetracker/jquery.iframetracker.js")

	script.

		$(function(){

			//close modal Pictures
			var myModal = document.getElementById('myModal')

			myModal.onclick = function(){
				document.getElementById('myModal').style.display = "none";
				$('.aModal').remove()

			}
			var span = document.getElementsByClassName("close")[0];

			span.onclick = function() { 
			    document.getElementById('myModal').style.display = "none";
			    $('.aModal').remove()
			}
			$(document).keyup(function(e) {
				 if (e.keyCode == 27){
				 	document.getElementById('myModal').style.display = "none";
				 }
			})



		
			//get JSON data
			var JSONdata = !{JSONdata};
			//get Current User data
			var curUser = JSONdata.curUser
			//retrieve certain post when postId is not Null
			var postId = JSONdata.postId
			//menu option send command when it is clicked
			var command = JSONdata.command

			var is_chrome = navigator.userAgent.indexOf('Chrome') > -1;
		    var is_explorer = navigator.userAgent.indexOf('MSIE') > -1;
		    var is_firefox = navigator.userAgent.indexOf('Firefox') > -1;
		    var is_safari = navigator.userAgent.indexOf("Safari") > -1;
			
			if(is_safari && !is_chrome){
				//this is Safari. myMCE is not loaded
			}else{
				// convert textarea to myMCE format
				myMCEini('textarea')
			}

			  
		
			//function for update notification badges
			function push_update_notification(msg){
				if(navigator.serviceWorker.controller){

			        navigator.serviceWorker.addEventListener('message', function(event){
			        	if(event.data.command == 'pushActivation'){
			        		console.log("run push activation");
			        		$.post('/notif/getNewNotifCount').done(function(Rdata){

			        			console.log('recieving update contain..')
			        			$('#badgeNotif').html(Rdata.userFeed)
			        		})
			        	}else if(event.data.command == 'updateNotif'){
			        		$.post('/notif/getNewNotif').done(function(Rdata){

			        			console.log('recieving update contain..')
			        			$('#notifBtn').html(Rdata.userFeed)
			        		})
			        		
			        	}
			        	
			        })
			        navigator.serviceWorker.controller.postMessage({'command':'POST'});
				    
			   	}
			}
				//ok

			//function to covert URI to Blob
			function dataURItoBlob(dataURI) {
			    var binary = atob(dataURI.split(',')[1]);
			    var array = [];
			    for(var i = 0; i < binary.length; i++) {
			        array.push(binary.charCodeAt(i));
			    }
			    return new Blob([new Uint8Array(array)], {type: 'image/jpeg'});
		    }

		    //exe home feed function
			feedHome()

			//home feed function
			function feedHome(){
				
				push_update_notification()
				var userSelected = []
				var userIdSelected = []
				var deptSelected = []

				var divInputGroup = document.createElement('div')
				divInputGroup.style.margin = "10px 0 10px 0"
				//- divInputGroup.className = 'form-group'
				
					//Main text editor. This textarea will back attached with tinyMCE if is not in safari mobile

					var inputPost = document.createElement('textarea')
					inputPost.id = 'post'
					inputPost.className = 'form-control'
					inputPost.placeholder = 'Post announcement here'
					divInputGroup.appendChild(inputPost)

					var divInputBtn = document.createElement('div')
					//- divInputBtn.className = 
						//DIV contain fileupload and its action
						var fileUpload = document.createElement("input")
						fileUpload.className = 'btn btn-success'
						fileUpload.style.display = 'inline'
						fileUpload.style.width = '250px'
						fileUpload.type = "file"
						fileUpload.id = 'upload'
						fileUpload.name = 'Upload'
						fileUpload.multiple = true
						//disabled post button when there no file attached
						fileUpload.addEventListener('change',function(){
							if(this.files.length>0){
								btnPost.disabled = false
							}else{
								btnPost.disabled = true
							}
						})

						
					
						divInputBtn.appendChild(fileUpload)





						//DIV contain POST button and its action
						//- var divInputGroupBtn = document.createElement('div')
						//- divInputGroupBtn.className = 'input-group-btn'
						var btnPost = document.createElement('button')
						btnPost.className = 'btn btn-primary'
						btnPost.innerHTML = 'POST'
						btnPost.id = 'btnPost'
						btnPost.disabled = true
						btnPost.addEventListener('click', function(){


							push_update_notification()
							var inputPostValue = inputPost.value
							console.log(inputPostValue)
							if(inputPostValue.indexOf('src="data')!==-1){
								signS3dataURI(inputPost.value)
							}else{
								
								fileUploadProcess(inputPost.value)
							}	
							function signS3dataURI (inputPostValue){
					 			var inputValueImage = inputPostValue.substring(inputPostValue.indexOf('src="data')+5, inputPostValue.indexOf('"',inputPostValue.indexOf('src="data')+20))

								var decodedImage = dataURItoBlob(inputValueImage)
								$.post('/sign-s3', {
									fileName:'image'+moment().format("DDHHmmssSSSS")+'.jpeg',
									fileType:decodedImage.type
								}).then(function(returnData){
									console.log(returnData)
									const xhr = new XMLHttpRequest();
									xhr.open('PUT', returnData.url);
									console.log('decodedImage:'+ decodedImage)
									xhr.onreadystatechange = function(){

									if(xhr.readyState === 4){
									  	if(xhr.status === 200){
										    console.log('uploaded file')
										    var inputPostValuewithURL = inputPostValue.replace(inputValueImage,returnData.url)
										    //- inputValueImage,'image'+curUser.id+moment().format("MMDDHHmmssSSSS")
										    console.log("inputPostValuewithURL:"+inputPostValuewithURL)
										    if(inputPostValuewithURL.indexOf('src="data')!==-1){
										    	signS3dataURI(inputPostValuewithURL)
										    }else{
										    	//- alert('all done ready for DB save')
										    	console.log("inputPostValuewithURLFinal:"+inputPostValuewithURL)
										    	fileUploadProcess(inputPostValuewithURL)
										    	//- postDBGroupSelect(inputPostValuewithURL)
										    }
									  	}else{
									    	alert('Could not upload file.');
									  	}
									}
									};
									xhr.send(decodedImage);
									//- return returnData.url
								})
							}
							//function send file to s3 upload after selected
							function fileUploadProcess(textEditorValue){
								var files = document.getElementById('upload').files
								console.log(files)
								if(files.length==0){
									postDBGroupSelect(inputPost.value)
									return false
								}
								var fileArray = $.map(files, function(file, index) {
								    return [file];
								});
								var i=0
								var returnURLs =''
								function uploadReturnURL(arrayFile){
									//- var decodedImage = dataURItoBlob(inputValueImage)
									console.log('type:')
									console.log(arrayFile[i].type)
									var fileNameNoSpace = arrayFile[i].name.replace(/ /g,"_")
									var fileType = arrayFile[i].type
									var orgFileName = arrayFile[i].name
									var fileExtension = orgFileName.substring(orgFileName.lastIndexOf('.'))
									
									var fileName
									var video = ['.m4v', '.mov', '.mp4', '.MKV', '.AVI', '.VOB', '.MPG', '.TiVo', '.FLV']
									if(fileType.indexOf('image')!== -1){
										fileName = moment().format("MMDDHHmmssSSSS")+ 'image.jpeg'
									}else if(fileType.indexOf('pdf')!== -1){
										fileName = moment().format("MMDDHHmmssSSSS")+ fileNameNoSpace
									}else if(fileType.indexOf('msword')!== -1 || fileType.indexOf('wordprocessingml')!== -1){
										fileName = moment().format("MMDDHHmmssSSSS")+ fileNameNoSpace
									}else if(fileType.indexOf('ms-excel')!== -1 || fileType.indexOf('spreadsheetml')!== -1){
										fileName = moment().format("MMDDHHmmssSSSS")+ fileNameNoSpace
									}else if(fileType.indexOf('ms-powerpoint')!== -1 || fileType.indexOf('presentationml')!== -1){
										fileName = moment().format("MMDDHHmmssSSSS")+ fileNameNoSpace
									}else if(video.indexOf(fileExtension)!==-1){
										fileName = moment().format("MMDDHHmmssSSSS")+ 'video.mp4'
									}else{
										fileName = moment().format("MMDDHHmmssSSSS")+ fileNameNoSpace
									}
									console.log(fileName)

									$.post('/sign-s3', {
										fileName:fileName,
										//- fileName:arrayFile[i].name,
										fileType:arrayFile[i].type
									}).then(function(returnData){
										console.log(returnData.signedRequest)
										console.log('file:')
										console.log(arrayFile[i])
										const xhr = new XMLHttpRequest();
										var signFileType = arrayFile[i].type
										var signFileName = arrayFile[i].name
										xhr.open('PUT', returnData.url);
										xhr.upload.addEventListener("progress", function(evt){
									      if (evt.lengthComputable) {
									        console.log("add upload event-listener" + evt.loaded + "/" + evt.total);
									        percentCompleted = Math.round(evt.loaded/evt.total*100) + '%'
									        
									        divProgress.style.display = 'block'
									        divProgressBar.innerHTML = percentCompleted
									        divProgressBar.style.width = percentCompleted
									        btnPost.disabled = true
									        console.log(percentCompleted)
									      }
									    }, false);
									    xhr.onloadend = function(){
									    	divProgress.style.display = 'none'
									    	btnPost.disabled = false
									    }


										xhr.onreadystatechange = function(){
										console.log('readyState:' + xhr.readyState)
										console.log('status:' + xhr.status)
											if(xhr.readyState === 4){
											  	if(xhr.status === 200){
												    console.log('uploaded file')
												    var url = returnData.url
												    var htmlbreak = (i == arrayFile.length - 1)?'</a>':'</a><br><br><br>'
												    console.log(htmlbreak)
												    //- inputValueImage,'image'+curUser.id+moment().format("MMDDHHmmssSSSS")
												    if(signFileType.indexOf('msword')!==-1||signFileType.indexOf('wordprocessingml')!==-1||
												    	signFileType.indexOf('ms-excel')!==-1||signFileType.indexOf('spreadsheetml')!==-1||
												    	signFileType.indexOf('ms-powerpoint')!==-1||signFileType.indexOf('presentationml')!==-1){
												    	returnURLs = returnURLs + '<p><iframe src="https://view.officeapps.live.com/op/embed.aspx?src='+returnData.url+'"></iframe></p><a href="'+returnData.url+'" download>DOWNLOAD: '+signFileName+'</a><br><br><br>'
												    }else if(signFileType.indexOf('pdf')!==-1){
												   		returnURLs = returnURLs + '<p><iframe src="https://docs.google.com/gview?url='+returnData.url+'&embedded=true"></iframe></p><a href="'+returnData.url+'" download>DOWNLOAD: '+signFileName+htmlbreak
												   		
												   	}else if(signFileType.indexOf('video')!==-1){
												   		returnURLs = returnURLs +'<p><video controls><source src="'+returnData.url+'"> </video></p>'
												    }else if(signFileType.indexOf('image')!==-1){
												    	returnURLs = returnURLs + '<p><img src="'+returnData.url+'"/></p>'
												    }else{
												    	returnURLs = returnURLs + '<p><a href="'+returnData.url+'" download>DOWNLOAD: '+signFileName+'</a></p><br><br>'
												    }
												    
												    console.log("returnURLs:"+returnURLs)
												    i++
												    if(i< arrayFile.length){
												    	uploadReturnURL(arrayFile)
												    }else{
												    	//- alert('all done ready for DB save')
												    	console.log("returnURLsFinal:"+returnURLs)
												    	postDBGroupSelect(textEditorValue+returnURLs)
												    }
											  	}else{
											    	alert('Could not upload files.');
											  	}
											}
										};
										xhr.send(arrayFile[i]);
									})


								}
								uploadReturnURL(fileArray)							

							}
						
						}) 
						divInputBtn.appendChild(btnPost)
					divInputGroup.appendChild(divInputBtn)

					//DIV contain progress-bar
					var divProgress = document.createElement('div')
					divProgress.style.display = 'none'
					divProgress.className = 'progress'
						divProgressBar = document.createElement('div')
						divProgressBar.id = 'divProgressBar'
						
						
						divProgressBar.className = "progress-bar progress-bar-striped active"
						divProgressBar.setAttribute('role', 'progressbar')
						divProgressBar.setAttribute('aria-valuenow', '70')
						divProgressBar.setAttribute('aria-valuemin', '0')
						divProgressBar.setAttribute('aria-valuemax', '100')
						//- divProgressBar.style.width = '0%'
						//- divProgressBar.innerHTML = '0'
						divProgress.appendChild(divProgressBar)
					
					divInputGroup.appendChild(divProgress)

						//- var btntest = document.createElement('button')
						//- btntest.className = 'btn btn-primary'
						//- btntest.innerHTML = 'TEST'
						//- btntest.addEventListener('click', function(){
							
						//- 	console.log($('#selectWorkGroup').val())
						//- 	//- console.log(document.getElementById('selectCoworker').length)
						//- 	//- console.log($('#selectCoworker').0.length)

						//- })
						//- divInputGroupBtn.appendChild(btntest)

					//- divInputGroup.appendChild(divInputGroupBtn)
				$('#Feed').append(divInputGroup)
				document.getElementById("post").focus()
				

				function postDBGroupSelect(inputValue, shareOriginalUserId){
					console.log(inputValue)
					console.log(select.value)
					if(select.value === 'Private'){
						postDB({
							postTo:select.value,
							postToValue: 'Private',
							postText: inputValue,
							shareOriginalUserId:shareOriginalUserId
							//- filter: selectFilter.value,
							//- userArr: userIdSelected
						})
					
					}else if(select.value === "WorkGroup" && selectWorkGroup.value !== ''){
						if(curUser.title === 'WorkGroup'){
							var selectWorkGroupVal = $('#selectWorkGroup').val().map(Number)
						}else{
							var selectWorkGroupVal = $('#selectWorkGroup').val()
						}
						postDB({
							postTo:select.value,
							postToValue: selectWorkGroupVal,
							postText:inputValue,
							shareOriginalUserId:shareOriginalUserId
							 
						})
						//- location.reload()
					}else if(select.value === 'Coworker'){

						if($('#selectCoworker').val().length === $('#selectCoworker').get(0).childElementCount){
							postDB({
								postTo:select.value,
								postToValue: 'ALL',
								postText:inputValue,
								shareOriginalUserId:shareOriginalUserId
							})
						}else{
							postDB({
								postTo:select.value,
								postToValue: $('#selectCoworker').val().map(Number),
								postText:inputValue,
								shareOriginalUserId:shareOriginalUserId
							})
						}
					
					}else if(select.value === 'Colleague'){
						if($('#selectColleague').val().length === $('#selectColleague').get(0).childElementCount){
							postDB({
								postTo:select.value,
								postToValue: 'ALL',
								postText:inputValue,
								shareOriginalUserId:shareOriginalUserId
							})
							
						}else{
							postDB({
								postTo:select.value,
								postToValue: $('#selectColleague').val().map(Number),
								postText:inputValue,
								shareOriginalUserId:shareOriginalUserId
							})
							
						}
					}else if(select.value === 'Coworker of Colleague'){
						if($('#selectCoofColleague').val().length === $('#selectCoofColleague').get(0).childElementCount){
							postDB({
								postTo:select.value,
								postToValue: 'ALL',
								postText:inputValue,
								shareOriginalUserId:shareOriginalUserId
							})
						}else{
							postDB({
								postTo:select.value,
								postToValue: $('#selectCoofColleague').val().map(Number),
								postText:inputValue,
								shareOriginalUserId:shareOriginalUserId
							})
							
						}

					}
				}

				

				$('#tagPost').bind('typeahead:selected', function(obj, group, name){
					$('#tagPost').typeahead('val', '')
					userSelected.push(group.name.substring(0,group.name.indexOf("_")))
					userIdSelected.push(group.groupBLUserId)
					//- $('#friendSearch').val('.....')
					console.log(obj)
					console.log(group)
					console.log(name)
				
				})
				

				//- document.getElementById('upload').style.display = 'block'

				var loadNumber = 12
				var select;
				var selectFilter
				//View and Post Filter
				$.post('/notif/getFeedSetting').done(function(Rdata){

					Rdata.settings.forEach(function(setting){
						//View Filter
						if(setting.settingDescriptionId === 1){
							// DIV contain view filter options
							var divViewFilter = document.createElement('div')
							divViewFilter.style.marginTop  = "20px"
							divViewFilter.style.clear = 'both'
							divViewFilter.className = 'form-group col-sm-12'

								// DIV contain label for VIEW FILTER
								var label = document.createElement('label')
								label.className = 'col-sm-1'
								label.innerHTML = 'View Filter: '
								divViewFilter.appendChild(label)


								// DIV contain selections for VIEW FILTER
								var divSelectViewFilter = document.createElement('div')
								divSelectViewFilter.className = 'col-sm-2'

									//List option from the Array 
									var selectViewFilter = document.createElement('select')
									selectViewFilter.className = 'form-control'
									selectViewFilter.name = 'viewPostFrom'
									selectViewFilter.id = 'viewPostFrom'
										var optionList = ['Coworker','Colleague','WorkGroup', 'Coworker of Colleague','Private', 'Public']
											var optionDB = document.createElement('option')
											optionDB.value = setting.value
											optionDB.innerHTML = setting.value
											selectViewFilter.appendChild(optionDB)

										optionList.forEach(function(item, i){
											if(item !== setting.value){
												var option = document.createElement('option')
												option.value = item
												option.innerHTML = item
												selectViewFilter.appendChild(option)
											}

										})
									selectViewFilter.addEventListener('change', function(){
										console.log(selectViewFilter.value)
										$('#divPostContainer').html('')
										$('#viewOnly').attr('checked', false)
										

										getPostDB({viewOption:selectViewFilter.value})

										
										$.post('/notif/setFeedSetting',{
											settingId:setting.id,
											settingValue:selectViewFilter.value,
											action:'update'
										}).done(function(Rdata){

										})
									})
									
									divSelectViewFilter.appendChild(selectViewFilter)
								divViewFilter.appendChild(divSelectViewFilter)

								// DIV contain label for VIEW ONLY
								var labelViewOnly = document.createElement('label')
								labelViewOnly.className = 'col-sm-1'
								labelViewOnly.innerHTML = 'View Only: '
								divViewFilter.appendChild(labelViewOnly)

							
								//DIV contain checkbox for VIEW ONLY and its action
								var divViewOnly = document.createElement('div')
								divViewOnly.className = 'col-sm-1'
									
									var viewOnly = document.createElement('input')
									viewOnly.type = 'checkbox'
									viewOnly.className = 'form-control'
									viewOnly.id = 'viewOnly'
									viewOnly.value = 'false'
									viewOnly.addEventListener('click', function(){
										if(this.checked === true){
											getPostDB({
												viewOption:selectViewFilter.value,
												viewOnly:true,
												byMe:$('#byMe').is(':checked'),
												byOther:$('#byOther').is(':checked')

											})
											$('#divPostContainer').html('')
										}else{
											getPostDB({
												viewOption:selectViewFilter.value,
												viewOnly:false,
												byMe:$('#byMe').is(':checked'),
												byOther:$('#byOther').is(':checked')
											})
											$('#divPostContainer').html('')
										}
									})
									divViewOnly.appendChild(viewOnly)
								divViewFilter.appendChild(divViewOnly)

								// DIV contain label for MY POST ONLY
								var labelByMe = document.createElement('label')
								labelByMe.className = 'col-sm-1'
								labelByMe.innerHTML = 'My Post Only:'
								divViewFilter.appendChild(labelByMe)


								//DIV contain checkbox for MY POST ONLY and its action
								var divByMe = document.createElement('div')
								divByMe.className = 'col-sm-1'
									
									var byMe = document.createElement('input')
									byMe.type = 'checkbox'
									byMe.className = 'form-control'
									byMe.id = 'byMe'
									byMe.value = 'false'
									byMe.addEventListener('click', function(){

										if(this.checked === true){
											getPostDB({
												viewOption:selectViewFilter.value,
												viewOnly:$('#viewOnly').is(':checked'),
												byMe:true,
												byOther:$('#byOther').is(':checked')
											})
											$('#divPostContainer').html('')
										}else{
											getPostDB({
												viewOption:selectViewFilter.value,
												viewOnly:$('#viewOnly').is(':checked'),
												byMe:false,
												byOther:$('#byOther').is(':checked')
											})
											$('#divPostContainer').html('')
										}
									})
									divByMe.appendChild(byMe)
								divViewFilter.appendChild(divByMe)


								// DIV contain label for BY OTHER
								var labelByOther = document.createElement('label')
								labelByOther.className = 'col-sm-1'
								labelByOther.innerHTML = 'PostBy Others:'
								divViewFilter.appendChild(labelByOther)

								//DIV contain checkbox for BY OTHER and its action
								var divByOther = document.createElement('div')
								divByOther.className = 'col-sm-1'
									
									var byOther = document.createElement('input')
									byOther.type = 'checkbox'
									byOther.className = 'form-control'
									byOther.id = 'byOther'
									byOther.value = 'false'
									byOther.addEventListener('click', function(){

										if(this.checked === true){
											getPostDB({
												viewOption:selectViewFilter.value,
												viewOnly:$('#viewOnly').is(':checked'),
												byMe:$('#byMe').is(':checked'),
												byOther:true,
												loadNumber:12
											})
											$('#divPostContainer').html('')
										}else{
											getPostDB({
												viewOption:selectViewFilter.value,
												viewOnly:$('#viewOnly').is(':checked'),
												byMe:$('#byMe').is(':checked'),
												byOther:false
											})
											$('#divPostContainer').html('')
										}
									})
									divByOther.appendChild(byOther)
								divViewFilter.appendChild(divByOther)

								// DIV contain label for Post Size
								var postSizeLable = document.createElement('label')
								postSizeLable.className = 'col-sm-1'
								postSizeLable.innerHTML = 'Post Size:'
								divViewFilter.appendChild(postSizeLable)

								// DIV contain selections for Post Size
								var divPostSize = document.createElement('div')
								divPostSize.className = 'col-sm-2'

									//List option from the Array 
									var postSizeOpt = document.createElement('select')
									postSizeOpt.className = 'form-control'
									postSizeOpt.name = 'postSize'
									postSizeOpt.id = 'postSize'
										var optionList = ['Medium','Small','Large']
											//- var optionDB = document.createElement('option')
											//- optionDB.value = setting.value
											//- optionDB.innerHTML = setting.value
											//- postSizeOpt.appendChild(optionDB)

										optionList.forEach(function(item, i){
											//- if(item !== setting.value){
												var option = document.createElement('option')
												option.value = item
												option.innerHTML = item
												postSizeOpt.appendChild(option)
											//- }

										})
									postSizeOpt.addEventListener('change', function(){
										console.log(postSizeOpt.value)
										$('#divPostContainer').html('')
										//- $('#viewOnly').attr('checked', false)
										

										getPostDB({postSize:postSizeOpt.value})

										
										//- $.post('/notif/setFeedSetting',{
										//- 	settingId:setting.id,
										//- 	settingValue:postSizeOpt.value,
										//- 	action:'update'
										//- }).done(function(Rdata){

										//- })
									})
									
									divPostSize.appendChild(postSizeOpt)
								divViewFilter.appendChild(divPostSize)

							$('#Feed').append(divViewFilter)

							var divViewFilter2 = document.createElement('div')
							divViewFilter2.style.clear = 'both'
							divViewFilter2.className = 'form-group col-sm-12'
								//- // DIV contain label for BY OTHER
								//- var labelDocOnly = document.createElement('label')
								//- labelDocOnly.className = 'col-sm-1'
								//- labelDocOnly.innerHTML = 'Document Only:'
								//- divViewFilter2.appendChild(labelDocOnly)

								//- //DIV contain checkbox for BY OTHER and its action
								//- var divDocOnly = document.createElement('div')
								//- divDocOnly.className = 'col-sm-1'
									
								//- 	var docOnly = document.createElement('input')
								//- 	docOnly.type = 'checkbox'
								//- 	docOnly.className = 'form-control'
								//- 	docOnly.id = 'docOnly'
								//- 	docOnly.value = 'false'
								//- 	docOnly.addEventListener('click', function(){

								//- 		//- if(this.checked === true){
								//- 			getPostDB({
								//- 				viewOption:selectViewFilter.value,
								//- 				docOnly:$('#docOnly').is(':checked'),
								//- 			})
								//- 			$('#divPostContainer').html('')
								//- 		//- }else{
								//- 			//- getPostDB({
								//- 			//- 	getPostDB({
								//- 			//- 	viewOption:selectViewFilter.value,
								//- 			//- 	docOnly:$('#docOnly').is(':checked'),
								//- 			//- })
								//- 			//- $('#divPostContainer').html('')
								//- 		//- }
								//- 	})
								//- 	divDocOnly.appendChild(docOnly)
								//- divViewFilter2.appendChild(divDocOnly)

								// DIV contain label for BY OTHER
								var labelViewContent = document.createElement('label')
								labelViewContent.className = 'col-sm-1'
								labelViewContent.innerHTML = 'Hide Content:'
								divViewFilter2.appendChild(labelViewContent)

								divViewContent = document.createElement('div')
								divViewContent.className = 'col-sm-2'
								divViewContent.id = 'divSelectCoworker'
									viewContentOpt = document.createElement('select')
									//- viewContentOpt.className = 'form-control'
									//- viewContentOpt.classList.add('col-sm-4')

									//- select.className = ''
									//- select.name = 'postTo'
									viewContentOpt.id = 'viewContentOpt'
									viewContentOpt.multiple = 'multiple'
									viewContentOpt.name = 'multiselect[]'
									contentOptArr = ['Downloads', 'Images', 'Previews', 'Videos']
									contentOptArr.forEach(function(item){
											console.log('item:'+ item)
											var option = document.createElement('option')
											option.value = item
											option.innerHTML = item
											viewContentOpt.appendChild(option)
									})
									divViewContent.appendChild(viewContentOpt)
								divViewFilter2.appendChild(divViewContent)


								var labelDateRange = document.createElement('label')
								labelDateRange.className = 'col-sm-1'
								labelDateRange.innerHTML = 'Search Date Range:'
								divViewFilter2.appendChild(labelDateRange)
								
								divDateRange = document.createElement('div')
								divDateRange.className = 'col-sm-2'
								divDateRange.id = 'divDateRange'
									var dateCalenderStart = document.createElement('input');
									dateCalenderStart.id = 'calendarStart';
									

									//- dateCalenderStart.setAttribute('readonly', true)
									// dateCalender.type = 'hidden'
									dateCalenderStart.placeholder = 'Start Date'
									dateCalenderStart.style.textAlign = 'center'
									dateCalenderStart.style.fontWeight = 'bold'
									dateCalenderStart.style.width = '125px'
									dateCalenderStart.style.fontSize = '100%'
									//- dateCalenderStart.style.border = '2px transparent'
									dateCalenderStart.addEventListener('mouseover', function(){
										$("#calendarStart").datepicker({
											// beforeShow: function(){
											// 	// alert('blco')
											// 	$("#calendar").blur()
											// },
											onSelect: function(){
												//- $.getJSON('/ajaxUser').done(mainSC);
												
											}
											
										});
									})
									divDateRange.appendChild(dateCalenderStart)
								//- divViewFilter2.appendChild(divDateRange)

									var dateCalenderEnd = document.createElement('input');
									dateCalenderEnd.id = 'calendarEnd';

									//- dateCalenderStart.setAttribute('readonly', true)
									// dateCalender.type = 'hidden'
									dateCalenderEnd.placeholder = 'End Date'
									dateCalenderEnd.style.textAlign = 'center'
									dateCalenderEnd.style.fontWeight = 'bold'
									dateCalenderEnd.style.width = '125px'
									dateCalenderEnd.style.fontSize = '100%'
									//- dateCalenderEnd.style.border = '2px transparent'
									dateCalenderEnd.addEventListener('mouseover', function(){
										$("#calendarEnd").datepicker({
											
											onSelect: function(){
												
												console.log(dateCalenderStart.value)
												if (dateCalenderStart.value === ""){
													alert('Please select Start Date')
													this.value = ''
												}else{
													
													getPostDB({
														viewOption:selectViewFilter.value,
														sDate:dateCalenderStart.value,
														eDate:dateCalenderEnd.value
														
													})
													$('#divPostContainer').html('')
														
												}
											}
											
										});
									})
									divDateRange.appendChild(dateCalenderEnd)
								divViewFilter2.appendChild(divDateRange)

							$('#Feed').append(divViewFilter2)
							
							
							$('#viewContentOpt').multiselect({
								onChange: function(element, checked, select){
									var checkedArr = $('#viewContentOpt').val()
									var hideDownload = hideImage = hideVideo = hidePreview = false
									
									checkedArr.forEach(function(item){
										if(item === 'Downloads'){
											hideDownload = true
										}else if (item === 'Images'){
											hideImage = true
										}else if (item === 'Videos'){
											hideVideo = true
										}else if (item === 'Previews'){
											hidePreview = true
										}
									})
									console.log('hideDownload:'+hideDownload)
									console.log('hideImage:'+hideImage)

									getPostDB({
										viewOption:selectViewFilter.value,
										hideVideo:hideVideo,
										hideDownload:hideDownload,
										hideImage:hideImage,
										hidePreview:hidePreview
									})

									//- if(checked !== true ){
									//- 	if(element.val()=== 'Videos'){
									//- 		getPostDB({
									//- 			viewOption:selectViewFilter.value,
									//- 			hideVideo:checked,
									//- 		})
									//- 	}else if (element.val()=== 'Downloads'){
									//- 		getPostDB({
									//- 			viewOption:selectViewFilter.value,
									//- 			hideDownload:checked,
									//- 		})
									//- 	}else if (element.val()=== 'Images'){
									//- 		getPostDB({
									//- 			viewOption:selectViewFilter.value,
									//- 			hideImage:checked,
									//- 		})
									//- 	}else if (element.val()=== 'Previews'){
									//- 		getPostDB({
									//- 			viewOption:selectViewFilter.value,
									//- 			hidePreview:checked,
									//- 		})
									//- 	}
										
									//- }else if(checked === true && element.val()=== 'Documents'){
									//- 	getPostDB({
									//- 		viewOption:selectViewFilter.value,
									//- 		hideDoc:checked,
									//- 	})


									//- }
								}
							});
							
							//- $('#viewContentOpt').multiselect('selectAll', false);
							//- $('#viewContentOpt').multiselect('updateButtonText');



						//Post Filter	
						} else if(setting.settingDescriptionId === 2){

							//DIV contain POST FILTER options
							var divInputGroupFilter = document.createElement('div')
							divInputGroupFilter.className = 'col-sm-12'
							divInputGroupFilter.style.marginBottom = '20px'

								//
								var label = document.createElement('label')
								label.className = 'col-sm-2'
								label.innerHTML = 'Post Filter: '
								divInputGroupFilter.appendChild(label)
					
								divSelect = document.createElement('div')
								divSelect.className = 'col-sm-3'
									select = document.createElement('select')
									select.className = 'form-control'
									select.classList.add('col-sm-4')

									//- select.className = ''
									select.name = 'postTo'
									select.id = 'postTo'
										
										var option = document.createElement('option')
										option.value = setting.value
										option.innerHTML = setting.value
										select.appendChild(option)
										

										var optionList = ['Coworker','Colleague', 'Coworker of Colleague','WorkGroup','Private', 'Public']

										optionList.forEach(function(item, i){
											if(item !== setting.value){
												var option = document.createElement('option')
												option.value = item
												option.innerHTML = item
												select.appendChild(option)
											}
										})
									select.addEventListener('change', function(){

										console.log(this.parentNode.parentNode.childNodes[3])
										$('#divSelectColleague').length != 0?$('#divSelectColleague').remove():""
										//- $('#divSelectCoworker').length != 0?$('#divSelectCoworker').remove():""
										$('#divSelectCoofColleague').length != 0?$('#divSelectCoofColleague').remove():""
										$('#divSelectWorkGroup').length != 0?$('#divSelectWorkGroup').remove():""
										if(select.value === 'Coworker'){
											$.post('/notif/getUserPostFilter',{
												userPostFilter:select.value
											}).done(function(Rdata){
												console.log(Rdata)
												divSelectCoworker = document.createElement('div')
												divSelectCoworker.className = 'col-sm-3'
												divSelectCoworker.id = 'divSelectCoworker'
													selectCoworker = document.createElement('select')
													selectCoworker.className = 'form-control'
													selectCoworker.classList.add('col-sm-4')

													//- select.className = ''
													//- select.name = 'postTo'
													selectCoworker.id = 'selectCoworker'
													selectCoworker.multiple = 'multiple'
													selectCoworker.name = 'multiselect[]'
													Rdata.usersPostfilter.forEach(function(item, i){
															console.log('item:'+ item)
															var option = document.createElement('option')
															option.value = item.id
															option.innerHTML = item.fullName
															selectCoworker.appendChild(option)
													})
													divSelectCoworker.appendChild(selectCoworker)
												divInputGroupFilter.insertBefore(divSelectCoworker, divSelectFilter)

												$('#selectCoworker').multiselect({
													includeSelectAllOption:true
												});
												$('#selectCoworker').multiselect('selectAll', false);
												$('#selectCoworker').multiselect('updateButtonText');
												
												 
											})
										}else if(select.value === 'Colleague'){
											//- $('#divSelectColleague').length != 0?$('#divSelectColleague').remove():""
											$('#divSelectCoworker').length != 0?$('#divSelectCoworker').remove():""
											$('#divSelectCoofColleague').length != 0?$('#divSelectCoofColleague').remove():""
											$('#divSelectWorkGroup').length != 0?$('#divSelectWorkGroup').remove():""
											$.post('/notif/getUserPostFilter',{
												userPostFilter:select.value
											}).done(function(Rdata){
												console.log(Rdata)
												divSelectColleague = document.createElement('div')
												divSelectColleague.className = 'col-sm-3'
												divSelectColleague.id = 'divSelectColleague'
													selectColleague = document.createElement('select')
													selectColleague.className = 'form-control'
													selectColleague.classList.add('col-sm-4')

													//- select.className = ''
													//- select.name = 'postTo'
													selectColleague.id = 'selectColleague'
													selectColleague.multiple = 'multiple'
													selectColleague.name = 'multiselect[]'
													Rdata.usersPostfilter.forEach(function(item, i){
															var option = document.createElement('option')
															option.value = item.id
															option.innerHTML = item.fullName + ' (' + item.department+
															')'
															selectColleague.appendChild(option)
													})
													divSelectColleague.appendChild(selectColleague)
												divInputGroupFilter.insertBefore(divSelectColleague, divSelectFilter)

												$('#selectColleague').multiselect({
													includeSelectAllOption:true
												});
												$('#selectColleague').multiselect('selectAll', false);
												$('#selectColleague').multiselect('updateButtonText');
												
												 
											})
										}else if(select.value === 'Coworker of Colleague'){
											$('#divSelectColleague').length != 0?$('#divSelectColleague').remove():""
											$('#divSelectCoworker').length != 0?$('#divSelectCoworker').remove():""
											$('#divSelectWorkGroup').length != 0?$('#divSelectWorkGroup').remove():""

											//- $('#divSelectCoofColleague').length != 0?$('#divSelectCoofColleague').remove():""
											$.post('/notif/getUserPostFilter',{
												userPostFilter:'Colleague'
											}).done(function(Rdata){
												console.log(Rdata)
												divSelectCoofColleague = document.createElement('div')
												divSelectCoofColleague.className = 'col-sm-3'
												divSelectCoofColleague.id = 'divSelectCoofColleague'
													selectCoofColleague = document.createElement('select')
													selectCoofColleague.className = 'form-control'
													selectCoofColleague.classList.add('col-sm-4')

													//- select.className = ''
													//- select.name = 'postTo'
													selectCoofColleague.id = 'selectCoofColleague'
													selectCoofColleague.multiple = 'multiple'
													selectCoofColleague.name = 'multiselect[]'
													Rdata.usersPostfilter.forEach(function(item, i){
															var option = document.createElement('option')
															option.value = item.id
															option.innerHTML = item.fullName + ' (' + item.department+
															')'
															selectCoofColleague.appendChild(option)
													})
													divSelectCoofColleague.appendChild(selectCoofColleague)
												divInputGroupFilter.insertBefore(divSelectCoofColleague, divSelectFilter)

												$('#selectCoofColleague').multiselect({
													includeSelectAllOption:true
												});
												//- $('#selectCoofColleague').multiselect('selectAll', false);
												$('#selectCoofColleague').multiselect('updateButtonText');
												
												 
											})
										}else if(select.value === "WorkGroup" && $('selectWorkGroup').length <1){
											$('#divSelectColleague').length != 0?$('#divSelectColleague').remove():""
											$('#divSelectCoworker').length != 0?$('#divSelectCoworker').remove():""
											$('#divSelectCoofColleague').length != 0?$('#divSelectCoofColleague').remove():""
											$.post('/notif/getMyWorkGroup').done(function(Rdata){

												divSelectWorkGroup = document.createElement('div')
												divSelectWorkGroup.className = 'col-sm-3'
												divSelectWorkGroup.id = 'divSelectWorkGroup'
													selectWorkGroup = document.createElement('select')
													selectWorkGroup.className = 'form-control'
													selectWorkGroup.classList.add('col-sm-4')

													//- select.className = ''
													//- select.name = 'postTo'
													selectWorkGroup.id = 'selectWorkGroup'
													//- option.innerHTML = 'Select WorkGroup'
													selectWorkGroup.multiple = 'multiple'
													selectWorkGroup.name = 'multiselect[]'
													if (curUser.title === 'WorkGroup'){
														Rdata.userGroups.forEach(function(item, i){
															if(item !== setting.value){
																var option = document.createElement('option')
																option.value = item.groupBLUserId
																option.innerHTML = item.name
																selectWorkGroup.appendChild(option)
															}
														})
													}else {
														Rdata.userGroups.forEach(function(item, i){
															if(item !== setting.value){
																var option = document.createElement('option')
																option.value = item.users[0].userGroups.status
																option.innerHTML = item.users[0].userGroups.status
																selectWorkGroup.appendChild(option)
															}
														})
													}
													divSelectWorkGroup.appendChild(selectWorkGroup)
												divInputGroupFilter.insertBefore(divSelectWorkGroup, divSelectFilter)
												$('#selectWorkGroup').multiselect({
													buttonText: function(){
														return 'Select WorkGroup'
													},
													includeSelectAllOption:true
												});
												//- $('#selectWorkGroup').multiselect('selectAll', false);
												$('#selectWorkGroup').multiselect('updateButtonText');
											})

										}else{
											$('#selectWorkGroup').remove()
										}
										
									})

									divSelect.appendChild(select)
								divInputGroupFilter.appendChild(divSelect)

								

								//DIV include, exclude person and/or departments with in post and its actions
								divSelectFilter = document.createElement('div')
								divSelectFilter.className = 'col-sm-3'
								

									selectFilter = document.createElement('select')
									selectFilter.className = 'form-control selectpicker'

									selectFilter.classList.add('col-sm-4')
									selectFilter.name = 'selectFilter'
									selectFilter.id = 'selectFilter'
										var optionList = [
												'Select Filter',
												'Include' 
												//- 'Exclude', '
												//- Include Department'
												]

										optionList.forEach(function(item, i){
											//- if(item !== setting.value){
												var option = document.createElement('option')
												option.value = item
												option.innerHTML = item
												selectFilter.appendChild(option)
											//- }

										})
									selectFilter.addEventListener('change', function(){
										selectFilter.value === 'Exclude'?$('#divSelectDept').remove():""


										//Whether include or exclude selected
										if((selectFilter.value === 'Include'||selectFilter.value === 'Exclude')&& $('#friendSearch').length <1){
											
											//DIV contain input search
											divfriendSearch = document.createElement('div')
											divfriendSearch.className = 'col-sm-3'
											divfriendSearch.id = 'divfriendSearch'
												var input = document.createElement('input')
												
												//- input.placeholder = 'Search Person'
												input.className ='form-control'
												input.id = 'friendSearch'
												
												input.setAttribute('href','#');
												input.setAttribute('data-toggle','popover');
												input.setAttribute('data-trigger','hover');
												input.setAttribute('data-placement','auto');
												input.style.fontWeight = 'bold'
												input.setAttribute('title', 'Selected User');
												
												//popover selected users when hovering over the input search
												document.addEventListener('mousemove', function(){
													input.setAttribute('data-content', JSON.stringify(userSelected, null, 4).replace(/"/g,"").replace("[","").replace("]",""));
													$('[data-toggle="popover"]').popover({html:true})
													
												})
												divfriendSearch.appendChild(input)
											divInputGroupFilter.appendChild(divfriendSearch)
											BHUserList("friendSearch")
											

											//typeahead display person info during search
											//- $('#friendSearch').bind('typeahead:selected', function(obj, group, name){
											//- 	$('#friendSearch').typeahead('val', '')
											//- 	userSelected.push(group.name.substring(0,group.name.indexOf("_")))
											//- 	userIdSelected.push(group.groupBLUserId)
											//- 	//- $('#friendSearch').val('.....')
											//- 	console.log(obj)
											//- 	console.log(group)
											//- 	console.log(name)
											
											//- })
										//When department is selected
										}else if (selectFilter.value === 'Include Department'){
											//- $('#divfriendSearch').remove()

											//get list of dept from server
											$.post('/notif/getDept').done(function(Rdata){
												if($('#selectDept').length<1){

													var divSelectDept = document.createElement('div')
													divSelectDept.className = 'col-sm-3'
													divSelectDept.id = 'divSelectDept'
														var selectDept = document.createElement('select')
														selectDept.className = 'form-control'
														selectDept.setAttribute('href','#');
														selectDept.setAttribute('data-toggle','popover');
														selectDept.setAttribute('data-trigger','hover');
														selectDept.setAttribute('data-placement','auto');
														selectDept.style.fontWeight = 'bold'
														selectDept.setAttribute('title', 'Selected Department');
														
														var optionDefault = document.createElement('option')
														optionDefault.innerHTML = 'Select Department'
														selectDept.appendChild(optionDefault)
														//adding depts to dropdown menu
														Rdata.department.forEach(function(dept, i){
															//- if(item !== setting.value){
																var option = document.createElement('option')
																option.value = JSON.stringify(dept, null, 4)
																option.innerHTML = dept.name

																selectDept.appendChild(option)
															//- }
														})
														selectDept.addEventListener('change', function(){
															var dept = JSON.parse(selectDept.value)
															userIdSelected.push(dept.status)
															deptSelected.push(dept.name)
															//- console.log(selectDept.value.name)
														})
														divSelectDept.appendChild(selectDept)
													divInputGroupFilter.appendChild(divSelectDept)
													document.addEventListener('mousemove', function(){
														selectDept.setAttribute('data-content', JSON.stringify(deptSelected, null, 4).replace(/"/g,"").replace("[","").replace("]",""));
														$('[data-toggle="popover"]').popover({html:true})
													
													})
												}
											})
										}
									})
								divSelectFilter.appendChild(selectFilter)
							divInputGroupFilter.appendChild(divSelectFilter)

							divShareBtn = document.createElement('div')
								var shareBtn = document.createElement('button')
								shareBtn.className = 'col-sm-1 btn btn-primary'
								shareBtn.innerHTML = 'Share'
								shareBtn.id = 'shareBtn'
								shareBtn.style.display = 'none'
								divShareBtn.appendChild(shareBtn)
								shareBtn.addEventListener('click',function(){
									console.log(curUser)
									console.log(select.value)
									console.log(selectFilter.value)
									console.log(userIdSelected)
									console.log($('#selectCoworker').val())
									$.post('/notif/sharePostContain',{
										mainPostId:postId
									}).done(function(mainPost){
										var shareText = '<p> Shared by '+curUser.name + ' ('+ curUser.title + ', ' +curUser.department.name+')</p><hr>'
										postDBGroupSelect(shareText + mainPost.postText, mainPost.userId)
									})

								})

							divInputGroupFilter.appendChild(divShareBtn)



							

							$('#Feed').append(divInputGroupFilter)

							var lineHR = document.createElement('HR')
							lineHR.style.clear = 'both'
							lineHR.style.height = '10px'
							lineHR.style.border = '2px'
							lineHR.style.backgroundColor = 'grey'
							//- lineHR.setAttribute('style','box-shadow:0 10px 10px -10px grey inset;')
							
							$('#Feed').append(lineHR)
							
							//diplay share button after clicking share 
							if(command === 'share'){
								console.log($('#shareBtn'))
								$('#shareBtn').css('display', 'block')
							}


							//- JQUERY typeahead example
							var divTHContainer = document.createElement('div')
							divTHContainer.className = 'typeahead__container'
								divTHContainer.style.maxWidth = '400px'
								var divTHField = document.createElement('div')
								divTHField.className = 'typeahead__field'
									spanTH = document.createElement('span')
									spanTH.className = 'typeahead__query'
						
										var input = document.createElement('input')
										
										//- input.placeholder = 'Search Person'
										input.className ='js-typeahead-friendSearch'
										//- input.id = 'friendSearch'
										input.type = 'search'
										input.name = 'friendSearch'
										//- input.setAttribute('href','#');
										//- input.setAttribute('data-toggle','popover');
										//- input.setAttribute('data-trigger','hover');
										//- input.setAttribute('data-placement','auto');
										//- input.style.fontWeight = 'bold'
										//- input.setAttribute('title', 'Selected User');
										
										//popover selected users when hovering over the input search
										//- document.addEventListener('mousemove', function(){
										//- 	input.setAttribute('data-content', JSON.stringify(userSelected, null, 4).replace(/"/g,"").replace("[","").replace("]",""));
										//- 	$('[data-toggle="popover"]').popover({html:true})
											
										//- })
										spanTH.appendChild(input)
									divTHField.appendChild(spanTH)
								divTHContainer.appendChild(divTHField)
							//- formTH.appendChild(divTHContainer)
							//- $('#Feed').append(divTHContainer)
							$.typeahead({
							    input: '.js-typeahead-friendSearch',
							    minLength:1,
							    maxItem: 20,
							    offset: true,
							    order: "acs",
							    href: "https://en.wikipedia.org/?title={{display}}",
							    
							    cache: true,
							    ttl: 700000000,

							    template:"{{name}} <small style='color:#999;'>{{group}}</small>",
							    //- correlativeTemplate: true,
							    source: {
						            groupName:{
						            	display: ["name", "status"],
							           	ajax: {
							            	type:'POST',
							                url: '/notif/groupList'
							            }
							        },
							        department:{
							        	data: ["My first added brand", "M1 added brand at start"],
							        	ajax: {
							        		
							            	type:'POST',
							                url: '/notif/groupList',
							                path:'department'							                
							            }
							        }
							    },
							    callback: {
							        onInit: function (node) {
							            console.log('Typeahead Initiated on ' + node.selector);
							        },
							        onNavigateAfter: function (node, lis, a, item, query, event) {
							            if (~[38,40].indexOf(event.keyCode)) {
							                var resultList = node.closest("form").find("ul.typeahead__list"),
							                    activeLi = lis.filter("li.active"),
							                    offsetTop = activeLi[0] && activeLi[0].offsetTop - (resultList.height() / 2) || 0;
							 
							                resultList.scrollTop(offsetTop);
							            }
							 
							        },
							        onClickAfter: function (node, a, item, event) {
							 
							            event.preventDefault();
							            console.log(item)
							 
							            var r = confirm("You will be redirected to:\n" + item.href + "\n\nContinue?");
							            if (r == true) {
							                window.open(item.href);
							            }
							 
							            $('#result-container').text('');
							 
							        },
							        onResult: function (node, query, result, resultCount) {
							            if (query === "") return;
							 
							            var text = "";
							            if (result.length > 0 && result.length < resultCount) {
							                text = "Showing <strong>" + result.length + "</strong> of <strong>" + resultCount + '</strong> elements matching "' + query + '"';
							            } else if (result.length > 0) {
							                text = 'Showing <strong>' + result.length + '</strong> elements matching "' + query + '"';
							            } else {
							                text = 'No results matching "' + query + '"';
							            }
							            $('#result-container').html(text);
							 
							        },
							        onMouseEnter: function (node, a, item, event) {
							 
							            if (item.group === "country") {
							                $(a).append('<span class="flag-chart flag-' + item.display.replace(' ', '-').toLowerCase() + '"></span>')
							            }
							 
							        },
							        onMouseLeave: function (node, a, item, event) {
							 
							            $(a).find('.flag-chart').remove();
							 
							        }

							    }
							});
						}
					})


					var divPostContainer = document.createElement('div')
					divPostContainer.id = 'divPostContainer'

					
					$('#Feed').append(divPostContainer)

					
				})
						
					
				//Expandable Post Textarea
				$('#post').autogrow({vertical: true, horizontal: false});
				
				//Reload Feed Contain when clicking on FeedTAB
				$('#feedTab').on('click', function(){
					window.location.href = '/notif'
				})


				var windowHt = window.innerHeight
				
				var loadPoint = 0
				var scrollPointLoad = 0 
				//Active scrolling: loading main post as users scrolling
				window.addEventListener('scroll', function(event){
					
					scrollPointLoad++
					scrollPointLoad>=12?scrollPointLoad=0:''
					//- scrollPoint6==6?console.log('XXX'):''
					//- console.log(scrollPoint6)
					var posScrollY = window.scrollY
					//- console.log(Math.ceil(posScrollY/100)*100)
					
					loadPoint = document.getElementById('divPostContainer').lastChild.getBoundingClientRect().top
					
					
					//- console.log('windowHt:'+Math.ceil(windowHt/100)*100)
					//- console.log('posScrollY:'+posScrollY)
					console.log('scrollPointLoad:')
					console.log(scrollPointLoad)
					
					console.log('loadPoint:')
					console.log(loadPoint)
					console.log('windowHt:')
					console.log(windowHt)
					console.log('loadNumber:'+loadNumber)

					if(loadPoint<windowHt && (scrollPointLoad==6 ||scrollPointLoad==9 )){
						
						
						console.log('loading...'+ loadNumber)
						
						getPostDB({loadNumber:loadNumber})
						loadNumber += 12
						//- preventDefault(event);
						
						//- loadNumber = loadNumber + 1
						//- feednumber = loadNumber*feedPerScroll
						//- console.log('feednumber: '+feednumber)
						//- windowHt = windowHt*loadNumber
					}
				 
				})
				if(postId !== undefined){

					getPostDB({postId:postId})
					
				}else{
					getPostDB()
				}
			}

			//Profile tab contain
			$('#ProfileTab').on('click', function(){
				$('#Profile').html('')
				$.post('/notif/getUserPost').done(function(Rdata){
					console.log(Rdata)
					Rdata.user.mainPosts.forEach(function(post, i){
					var div = document.createElement('div')
					
					div.className = 'panel panel-primary'
					div.classList.add('col-sm-4')
						var divBody = document.createElement('div')
						divBody.className = 'panel-body'
							var h3 = document.createElement('h3')
							h3.innerHTML = post.postText
							divBody.appendChild(h3)
						div.appendChild(divBody)

						var divTitle = document.createElement('div')
						divTitle.className = 'panel-heading'
						div.appendChild(divTitle)

							var pUser = document.createElement('p')
							pUser.innerHTML =  Rdata.user.name + " posted " + moment(post.createdAt).fromNow()
							divTitle.appendChild(pUser)
						$('#Profile').append(div)
					})
					
				})
			})

			//Relationships TAB contain
			$('#RelationshipTab').on('click',function(){
				console.log('Relationships')
				ul = document.createElement('ul')
				ul.className = 'list-group'
				ul.classList.add('col-sm-6')
				var addGroup
				$.getJSON('/notif/userGetGroups').done(function(Rdata){
					var groupList = Rdata.groupList
					groupList.forEach(function(group,i){
						addGroup = function (group){
							li = document.createElement('li')
							li.className = 'list-group-item'
							li.appendChild(document.createTextNode(group.name))
								var span = document.createElement('span')
								span.style.float = 'right'
								//- if (group.userGroups.status=='Colleague'){
								//- 	span.style.color = '#2DC729'
								//- 	span.style.fontSize = '20px'
								//- 	span.className = "glyphicon glyphicon-link"
								//- }else 
								if (group.userGroups.status=='PENDING'){
									span.style.color = '#F0C20B'
									span.style.fontSize = '20px'
									span.className = "glyphicon glyphicon-hourglass"
								}else if (group.userGroups.status=='Owner'){
									span.style.color = '#DC14EE'
									span.style.fontSize = '20px'
									span.className = "glyphicon glyphicon-user"
								}else if(group.userGroups.status.indexOf('REQUEST')>0){
									span.style.color = '#EE1414'
									span.style.fontSize = '14px'
									span.innerHTML = group.userGroups.status
									span.className = "requestSign"
									span.id = 'requestSpan'
								}else {
									span.style.color = '#2DC729'
									span.style.fontSize = '14px'
									span.innerHTML = group.userGroups.status
									span.className = "acceptSign"
									span.id = 'acceptSpan'
								}

								
								function myTest(){
									console.log('sfsf')
										$.post('/notif/editGroup',{
										groupSelectedId:group.id,
										action:'delete'
										}).done(function(pData){

											ul.removeChild(span.parentNode)

										})

								}
								span.addEventListener('mousedown', function(e){
									console.log(e)
									var mouseDown = true
									if(span.className=='glyphicon glyphicon-user'){
										
									

									}else if(span.className=='requestSign'){
										$("#requestSpan").hide()
										console.log(span.parentNode)

										var spanOk = document.createElement('span')
										spanOk.style.float = 'right'
										spanOk.style.color = 'green'
										spanOk.style.fontSize = '20px'
										spanOk.id = 'spanOk'
										spanOk.className = "glyphicon glyphicon-ok"
										spanOk.addEventListener('click',function(){
											$.post('/notif/editGroup',{
											groupSelectedId:group.id,
											action:'accept'
											}).done(function(pData){
												
												//- addGroup(pData.group.name)
												location.reload()

											})
										})
										
										span.parentNode.appendChild(spanOk)

										var spanSpace = document.createElement('span')
										spanSpace.style.float = 'right'
										spanSpace.innerHTML = '&nbsp&nbsp&nbsp&nbsp&nbsp'
										span.parentNode.appendChild(spanSpace)

										var spanDeny = document.createElement('span')
										spanDeny.style.float = 'right'
										spanDeny.style.color = 'red'
										spanDeny.style.fontSize = '20px'
										spanDeny.id = 'spanOk'

										spanDeny.className = "glyphicon glyphicon-remove"
										spanDeny.addEventListener('click',function(){
											$.post('/notif/editGroup',{
											groupSelectedId:group.id,
											action:'delete'
											}).done(function(pData){
												ul.removeChild(span.parentNode)
											})
										})
										span.parentNode.appendChild(spanDeny)
											
									}else if (mouseDown==true){

										

										var spanSpace = document.createElement('span')
										spanSpace.style.float = 'right'
										spanSpace.innerHTML = '&nbsp&nbsp&nbsp&nbsp&nbsp'
										span.parentNode.appendChild(spanSpace)

										var spanDeny = document.createElement('span')
										spanDeny.style.float = 'right'
										spanDeny.style.color = 'red'
										spanDeny.style.fontSize = '20px'
										spanDeny.id = 'spanOk'

										spanDeny.className = "glyphicon glyphicon-remove"
										spanDeny.addEventListener('click',function(){
											$.post('/notif/editGroup',{
											groupSelectedId:group.id,
											action:'delete'
											}).done(function(pData){
												ul.removeChild(span.parentNode)
											})
										})
										span.parentNode.appendChild(spanDeny)
										//- var spanDel = document.createElement('span')
										//- spanDel.style.float = 'right'
										//- spanDel.style.color = 'red'
										//- spanDel.id = 'spanDel'
										//- spanDel.className = "glyphicon glyphicon-remove"
										//- spanDel.innerHTML = "Release on icon to remove"
										//- ul.appendChild(spanDel)
										

									}
								
								})
								
								li.appendChild(span)
								
								
						}

						addGroup(group)
						ul.appendChild(li)

					})
					
					var liAddGroup = document.createElement('li')
					liAddGroup.className = 'list-group-item'
						//- var inputgroup = document.createElement('div')
						//- inputgroup.className = 'input-group'
						
						//- liAddGroup.appendChild(inputgroup)

							//- var span = document.createElement('span')
							//- span.className = 'input-group-btn'
							//- //- span.id = 'basic-addon1'
							//- 	var btn = document.createElement('button')
							//- 	btn.className = 'btn btn-primary'
							//- 	//- btn.type = 'button'
							//- 	span.appendChild(btn)
							//- inputgroup.appendChild(span)
							divSelect = document.createElement('div')
							divSelect.className = 'col-sm-6'
								var select = document.createElement('select')
								select.className = 'form-control'
								select.name = 'postTo'
								select.id = 'postTo'
									if(curUser.title === 'WorkGroup'){
										var optionList = [curUser.lastname+'_'+curUser.name]
									}else{
										var optionList = ['Coworker','Colleague']
									}
									optionList.forEach(function(item, i){
										//- if(item !== setting.value){
											var option = document.createElement('option')
											option.value = item
											option.innerHTML = item
											select.appendChild(option)
										//- }

									})
								divSelect.appendChild(select)
							liAddGroup.appendChild(divSelect)

							divInput = document.createElement('div')
							divInput.className = 'col-sm-6'
								var input = document.createElement('input')
								input.type = 'text'

								
								input.placeholder = 'Search and Select to ADD'
								input.className ='form-control'
								input.id = 'groupSearch'
								//- input.setAttribute("aria-describedby", "basic-addon1")
								divInput.appendChild(input)
							liAddGroup.appendChild(divInput)


					ul.appendChild(liAddGroup)

					$('#Relationships').append(ul)

					BHUserList("groupSearch")

					$('#groupSearch').bind('typeahead:selected', function(obj, group, name){
						console.log(select.value)
						$.post('/notif/editGroup',{
						groupSelectedId:group.id,
						relationship:select.value,
						action:'add'
						}).done(function(pData){
							//- console.log("xx: "+JSON.stringify(group, null, 4))
							var group = pData.group
							group.userGroups = {status:'PENDING'}
							console.log(group)
							addGroup(group)
							ul.insertBefore(li, ul.lastChild)
							$('#groupSearch').val('')
							
							
					
						});
					})
					//- $('#groupSearch').bind('typeahead:change', function(obj, group, name){

					//- 	alert('change')
					//- })
				})
				$('#Relationships').html(ul)
			})

			$('#TagManagerTab').on('click', tagManagerTabClick)

			//Setting TAB contain
			$('#SettingTab').on('click', function(){
				$('#Setting').html('')
				var settingList = ['I want to view post from', 'who can see my post']
				$.post('/notif/getFeedSetting').done(function(Rdata){

					Rdata.settings.forEach(function(setting){


					
						var div = document.createElement('div')
						div.className = 'form-group col-sm-8'

							var label = document.createElement('label')
							label.className = 'col-sm-5'
							label.innerHTML = setting.settingDescription.description
							div.appendChild(label)

							var divSelect = document.createElement('div')
							divSelect.className = 'col-sm-3'


								var select = document.createElement('select')
								select.className = 'form-control'
								select.name = 'viewPostFrom'
								select.id = 'viewPostFrom'
									var optionList = ['Coworker','Colleague','WorkGroup', 'Coworker of Colleague','Private', 'Public']
										var optionDB = document.createElement('option')
										optionDB.value = setting.value
										optionDB.innerHTML = setting.value
										select.appendChild(optionDB)

									optionList.forEach(function(item, i){
										if(item !== setting.value){
											var option = document.createElement('option')
											option.value = item
											option.innerHTML = item
											select.appendChild(option)
										}

									})
								select.addEventListener('change', function(){

									//- alert(select.value)
									$.post('/notif/setFeedSetting',{
										settingId:setting.id,
										settingValue:select.value,
										action:'update'
									}).done(function(Rdata){

									})
								})
								
								divSelect.appendChild(select)

							div.appendChild(divSelect)
						$('#Setting').append(div)

					})
				})
			})
			
				
		})