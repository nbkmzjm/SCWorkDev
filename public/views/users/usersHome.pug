extends ../layout/layout.pug

  
block title 
  title Users

block header
  #header
  include ../layout/header.pug

block horMenu
  include ../layout/horMenu.pug

block content
  #container
    #userContainer
      ul(class="nav nav-tabs")
        li(class="active" id='userListTab')
          a(data-toggle="tab" href="#userList") Users
        li(id='userFormTab')
          a(data-toggle="tab"  href="#userForm") Create User
        li(id='deptTab')
          a(data-toggle="tab"  href="#deptForm") Create Department
        li(id='WorkGroupFormTab')
          a(data-toggle="tab"  href="#WorkGroupForm") Create WorkGroup

      div(class="tab-content")
        div(id="userList" class="tab-pane fade in active")

        div(id="userForm" class="tab-pane")
          br
          form(class="form-horizontal" autocomplete="off" id='form' action="/users/addUser" method="POST")
            div(class="form-group")
              label(class="control-label col-sm-2" for="name") First Name
              div(class="col-sm-4")
                input(type="hidden" class="form-control" id="id" name="id" value='0')
                input(type="text" class="form-control" id="name" name="name" placeholder="Enter First Name" )
            div(class="form-group")
              label(class="control-label col-sm-2" for="lastname") Last Name
              div(class="col-sm-4")
                input(type="text" class="form-control" id="lastname" name="lastname" placeholder="Enter Last Name" )
            div(class="form-group")
              label(class="control-label col-sm-2" for="email") Email
              div(class="col-sm-4")
                input(type="email" class="form-control" id="email" name="email" placeholder="Enter Email")
            div(class="form-group")
              label(class="control-label col-sm-2" for="username") Username
              div(class="col-sm-4")
                input(type="text" class="form-control" id="username" name="usern" placeholder="Enter Username")
            div(class="form-group")
              label(class="control-label col-sm-2" for="password") Password
              div(class="col-sm-4")
                input(type="password" class="form-control" id="password" name="password" placeholder="Enter Password" )
            div(class="form-group" id='deptInput')
              label(class="control-label col-sm-2" for="department") Department
              span
                input(type='button' class="btn btn-success" value='Add New' id='addDeptBtnUser' ) 
              div(class="col-sm-4")
                select(class="form-control" id="department" name="department")
                
                  
            div(class="form-group")
              label(class="control-label col-sm-2" for="title") Title
              div(class="col-sm-4")
                select(name="title" class="form-control" id="title" )
                  option(value="") Select One
                  option(value="Administrator") Administrator
                  option(value="Pharmacist") Pharmacist
                  option(value="Pharmacist Float") Pharmacist Float
                  option(value="Director") Director
                  option(value="Manager") Manager
                  option(value="Supervisor") Supervisor
                  option(value="Technician 2") Technician 2
                  option(value="Technician 3") Technician 3
                  option(value="Technician TPN") Technician TPN
                  option(value="Technician Float") Technician Float
                  option(value="Quality Control") Quality Control
                  option(value="Personel") Personel
                  option(value="Associate") Associate
                  option(value="WorkGroup") WorkGroup
                  option(value="Trainee") Trainee

            div(class="form-group")
              label(class="control-label col-sm-2" for="role") Role
              div(class="col-sm-4")
                select(name="role" class="form-control" id="role" )
                  option(value="") Select One
                  option(value="Administrator") Administrator
                  option(value="Superuser") Superuser
                  option(value="User") User
            div(class="form-group")
              label(class="control-label col-sm-2" for="active") Active
              div(class="col-sm-1")
                input(type="checkbox" id= 'active' class="form-control" name="active" value='true' checked)

              label(class="control-label col-sm-2" for="onSchedule") On Schedule
              div(class="col-sm-1")
                input(type="checkbox" id= 'onSchedule' class="form-control" name="onSchedule" value='true' checked)

              label(class="control-label col-sm-2" for="passreset") Reset Password
              div(class="col-sm-1")
                input(type="checkbox" id= 'passreset' class="form-control" name="passreset" value=true disabled=true)


            div(class="form-group")
              div(class="col-sm-offset-2 col-sm-3")
                button(type="submit" id='submit' class="btn btn-primary") Submit

            
          div.errors
        div(id="deptForm" class="tab-pane")
          br
          form(class="form-horizontal" autocomplete="off" id='formDept' action="/users/addDept" method="POST")
            div(class="form-group")
              label(class="control-label col-sm-2" for="deptName") Department Name
              div(class="col-sm-4")
                
                input(type="text" class="form-control" id="deptName" name="deptName" placeholder="Enter Department Name" )
            
            div(class="form-group")
              label(class="control-label col-sm-2" for="status") Status
              div(class="col-sm-4")
                select(name="status" class="form-control" id="status")
                  
                  option(value="Active") Active
                  option(value="Deactivate") Deactivate
            div(class="form-group")
              div(class="col-sm-offset-2 col-sm-3")
                button(type="submit" id='submitDept' class="btn btn-primary") Submit
          div.errors
        div(id="WorkGroupForm" class="tab-pane")
          br
          alert('submitWorkGroup')
          form(class="form-horizontal" autocomplete="off" id='formWorkGroup' method="POST")
            div(class="form-group")
              label(class="control-label col-sm-2" for="name") WorkGroup Name
              div(class="col-sm-4")
                input(type="hidden" class="form-control" id="WorkGroupId" name="id" value='0')
                input(type="text" class="form-control" id="WorkGroupName" name="name" placeholder="Enter WorkGroup Name" )
            div(class="form-group")
              label(class="control-label col-sm-2" for="email") Email
              div(class="col-sm-4")
                input(type="email" class="form-control" id="WorkGroupEmail" name="email" placeholder="Enter Email")
            div(class="form-group")
              label(class="control-label col-sm-2" for="username") Username
              div(class="col-sm-4")
                input(type="text" class="form-control" id="WorkGroupUsername" name="usern" placeholder="Enter Username")
            div(class="form-group")
              label(class="control-label col-sm-2" for="password") Password
              div(class="col-sm-4")
                input(type="password" class="form-control" id="WorkGroupPassword" name="password" placeholder="Enter Password" )
            div(class="form-group")
              label(class="control-label col-sm-2" for="department") Department
              span
                input(type='button' class="btn btn-success" value='Add New' id='addDeptBtnWG' ) 
              div(class="col-sm-4")
                select(class="form-control" id="WorkGroupDepartment" name="department")
            div(class="form-group")
              label(class="control-label col-sm-2" for="active") Active
              div(class="col-sm-1")
                input(type="checkbox" id= 'WorkGroupActive' class="form-control" name="active" value='true' checked)
              label(class="control-label col-sm-2" for="onSchedule") On Schedule
              div(class="col-sm-1")
                input(type="checkbox" id= 'WorkGroupOnSchedule' class="form-control" name="active" value='true' checked)
              label(class="control-label col-sm-2" for="passreset") Reset Password
              div(class="col-sm-1")
                input(type="checkbox" id= 'WorkGroupPassreset' class="form-control" name="passreset" value=true disabled=true)


            div(class="form-group")
              div(class="col-sm-offset-2 col-sm-3")
                button(type="submit" id='submitWorkGroup' class="btn btn-primary") Submit
            
          div.errors
            
append scripts 
  script(src="public/fnLib/homeFn.js")
  script(src="public/fnLib/authFn.js")
  script.

    $(function(){
      console.log('a')
       //- $('#title').multiselect();
      var JSONdata = !{JSONdata};
      var curUser = JSONdata.curUser
      var firstUser = JSONdata.firstUser
      console.log('curUser')
      console.log(curUser)

      if (curUser == undefined ){
        //No user found
        if (JSONdata.tabx=='userForm'){
          //middleware return tabx == userForm when there is no user in DB

          $('#userListTab').attr('class', '')
          $('#userFormTab').attr('class', 'active')
          //- $('#deptTab').attr('class', 'active')
          $('#userForm').attr('class', 'tab-pane fade in active')
          //- $('#deptTab').attr('class', 'active')
          //- $('#').attr('class', 'tab-pane')
          //- $('#deptForm').attr('class', 'tab-pane fade in active')

          //Check if dept exist
          $.getJSON('/users/getDept').done(function(Rdata){
            console.log(Rdata)

            if(Rdata.departments !== 'undefined'){
              //Create dept Admin for first Admin user
              Rdata.departments.forEach(function(department, i){
                  var option = document.createElement('option')
                  option.value = department.id
                  option.innerHTML = department.name
                  $('#department').append(option)
              })
            }else{
              $.post('/users/addDept',{
                deptName:'Administrator',
                status:'Active',
              }).done(function(Rdata){
                window.location.replace(Rdata.redi)
              })
            }
          })
          //Pulling data form userForm to submit fist Admin user
          $("#form").on('submit', function(e){
            var active = false
            var passreset = false
            var onSchedule = false
            $('#active').is(':checked')?active = true:''
            $('#passreset').is(':checked')?passreset = true:''
            $('#onSchedule').is(':checked')?onSchedule = true:''
            $.post('/users/addUser',{
              //- departmentId:curUser.department.id,
              name:$('#name').val(),
              lastname:$('#lastname').val(),
              id:$('#id').val(),
              email:$('#email').val(),
              username:$('#username').val(),
              password:$('#password').val(),
              title:$('#title').val(),
              role:$('#title').val(),
              departmentId:$('#department').val(),
              active:active,
              passreset:passreset,
              onSchedule:onSchedule
            }).done(function(Rdata){
              if (!!Rdata.redi){
                window.location.replace(Rdata.redi)
              }else if (!!Rdata.errors){
              //- alert(JSON.stringify(Rdata.errors, null, 4))
                $('.errors').html('')
                if (typeof Rdata.errors == 'string'){
                  $('.errors').append('<br>'+'* '+ Rdata.errors)
                  $('.errors').addClass('error')
                  $('.errors').addClass('col-sm-offset-2 col-sm-10')
                } else{

                  Rdata.errors.forEach(function(item){
                    $('.errors').append('<br>'+'* '+ item.msg)
                    $('.errors').addClass('error')
                    $('.errors').addClass('col-sm-offset-2 col-sm-10')
                  })
                }
              }
            })
            e.preventDefault();
            return false;
          });
        }
      }else{
      //User found
        $('#addDeptBtnUser').on('click', function(){
          $('#userFormTab').attr('class', '')
          $('#deptTab').attr('class', 'active')
          $('#userForm').attr('class', 'tab-pane')
          $('#deptForm').attr('class', 'tab-pane fade in active')
        })
        $('#addDeptBtnWG').on('click', function(){
          $('#userFormTab').attr('class', '')
          $('#deptTab').attr('class', 'active')
          $('#userForm').attr('class', 'tab-pane')
          $('#deptForm').attr('class', 'tab-pane fade in active')
        })
        //submit new dept form
        $("#formDept").on('submit', function(e){
          $.post('/users/addDept',{
            
            deptName:$('#deptName').val(),
            status:$('#status').val(),
          }).done(function(Rdata){
            if (!!Rdata.redi){
              window.location.replace(Rdata.redi)
            }else if (!!Rdata.errors){
            //- alert(JSON.stringify(Rdata.errors, null, 4))
              $('.errors').html('')
              if (typeof Rdata.errors == 'string'){
                $('.errors').append('<br>'+'* '+ Rdata.errors)
                $('.errors').addClass('error')
                $('.errors').addClass('col-sm-offset-2 col-sm-10')
              } else{

                Rdata.errors.forEach(function(item){
                  $('.errors').append('<br>'+'* '+ item.msg)
                  $('.errors').addClass('error')
                  $('.errors').addClass('col-sm-offset-2 col-sm-10')
                })
              }
            }
          })
          e.preventDefault();
          //- return false;
        })
        // new/edit user userForm if at least one user exist
        $("#form").on('submit', function(e){
          var active = false
          var passreset = false
          var onSchedule = false
          $('#active').is(':checked')?active = true:''
          $('#passreset').is(':checked')?passreset = true:''
          $('#onSchedule').is(':checked')?onSchedule = true:''
          
          $.post('/users/addUser',{
            //- departmentId:curUser.department.id,
            name:$('#name').val(),
            lastname:$('#lastname').val(),
            id:$('#id').val(),
            email:$('#email').val(),
            username:$('#username').val(),
            password:$('#password').val(),
            title:$('#title').val(),
            role:$('#role').val(),
            departmentId:$('#department').val(),
            active:active,
            passreset:passreset,
            schedule:onSchedule

          }).done(function(Rdata){
            if (!!Rdata.redi){
              window.location.replace(Rdata.redi)
            }else if (!!Rdata.errors){
            alert(JSON.stringify(Rdata.errors, null, 4))
              $('.errors').html('')
              if (typeof Rdata.errors == 'string'){
                alert('string')
                $('.errors').append('<br>'+'* '+ Rdata.errors)
                $('.errors').addClass('error')
                $('.errors').addClass('col-sm-offset-2 col-sm-10')
              } else{

                Rdata.errors.forEach(function(item){
                  $('.errors').append('<br>'+'* '+ item.msg)
                  $('.errors').addClass('error')
                  $('.errors').addClass('col-sm-offset-2 col-sm-10')
                })
              }
            }
          })
          //prevent form submit and return JSON
          e.preventDefault();
          return false;
        });

        // new/edit user workGroupForm if at least one user exist
        $("#formWorkGroup").on('submit', function(e){
          var active = false
          var passreset = false
          var onSchedule = false
          $('#WorkGroupActive').is(':checked')?active = true:''
          $('#WorkGroupPassreset').is(':checked')?passreset = true:''
          $('#WorkGroupOnSchedule').is(':checked')?onSchedule = true:''
          
          $.post('/users/addUser',{
            //- departmentId:curUser.department.id,
            name:$('#WorkGroupName').val(),
            lastname:'WorkGroup',
            id:$('#WorkGroupId').val(),
            email:$('#WorkGroupEmail').val(),
            username:$('#WorkGroupUsername').val(),
            password:$('#WorkGroupPassword').val(),
            title:'WorkGroup',
            departmentId:$('#WorkGroupDepartment').val(),
            active:active,
            passreset:passreset,
            schedule:onSchedule

          }).done(function(Rdata){
            if (!!Rdata.redi){
              window.location.replace(Rdata.redi)
            }else if (!!Rdata.errors){
            //- alert(JSON.stringify(Rdata.errors, null, 4))
              $('.errors').html('')
              if (typeof Rdata.errors == 'string'){
                $('.errors').append('<br>'+'* '+ Rdata.errors)
                $('.errors').addClass('error')
                $('.errors').addClass('col-sm-offset-2 col-sm-10')
              } else{

                Rdata.errors.forEach(function(item){
                  $('.errors').append('<br>'+'* '+ item.msg)
                  $('.errors').addClass('error')
                  $('.errors').addClass('col-sm-offset-2 col-sm-10')
                })
              }
            }
          })
          e.preventDefault();
          return false;
        });


        //Disabling fields depend on user role to prevent unauthorized changes
        if(curUser.department.name !== 'ADMINISTRATOR'){

          $('#department').attr('disabled', true)
          $('#WorkGroupDepartment').attr('disabled', true)

          //- if(curUser.role !=='')
          
        }else{
          $('#department').attr('disabled', false)
          $('#department').val('')
          $('#WorkGroupDepartment').attr('disabled', false)
          $('#WorkGroupDepartment').val('')
          
        }

        //disable Title and Role if not Admin/Superuser
        //- if (['Admin', 'Superuser'].indexOf(curUser.role) == -1) {
        //-   $('#userFormTab').html('')
        //-   if (firstUser){
        //-     $('#title').attr('disabled', false)
        //-     $('#role').attr('disabled', false)
        //-   }else{

        //-     $('#title').attr('disabled', true)
        //-     $('#role').attr('disabled', true)
        //-   }

        
          
        //-   $('#passreset').attr('disabled', true)
        //- }else{


        //- }

        if(roleList('A').indexOf(curUser.role) !== -1) {
          $('#title').attr('disabled', false)
          $('#role').attr('disabled', false)
          
            
        }else{

          if(firstUser){
            $('#title').attr('disabled', false)
            $('#role').attr('disabled', false)
          }else{
            if(roleList('B').indexOf(curUser.role) !== -1){
              $('#title').attr('disabled', false)
              $('#role').attr('disabled', false)
            }

            
          }
          
        }


        //Clear form when click on the user form tab
        $('#userFormTab').click(function(){
          $('#name').val('')
          $('#id').val('0')
          $('#email').val('')
          $('#username').val('')
          $('#title').val('')
          $('#lastname').val('')
          $('#password').attr('type','password')
          $('#password').val('')
          $('#passreset').attr('disabled', false)
          $('.error').html('')
          $('#department').html('')
          var option = document.createElement('option')
            option.value = curUser.department.id
            option.innerHTML = curUser.department.name
            $('#department').append(option)
          $.getJSON('/users/getDept').done(function(Rdata){

            Rdata.departments.forEach(function(department, i){
              if(department.name !== curUser.department.name){
                var option = document.createElement('option')
                option.value = department.id
                option.innerHTML = department.name
                $('#department').append(option)
              }

            })
          })
          document.getElementById('active').checked = 1
        })  

        //Clear form when click on the workgroup form tab
        $('#WorkGroupFormTab').click(function(){
          $('#WorkGroupName').val('')
          $('#WorkGroupId').val('0')
          $('#WorkGroupEmail').val('')
          $('#WorkGroupUsername').val('')
          $('#WorkGroupPassword').attr('type','password')
          $('#WorkGroupPassword').val('')
          $('#WorkGroupPassreset').attr('disabled', false)
          $('.error').html('')
          $('#WorkGroupDepartment').html('')
          var option = document.createElement('option')
            option.value = curUser.department.id
            option.innerHTML = curUser.department.name
            $('#WorkGroupDepartment').append(option)
          $.getJSON('/users/getDept').done(function(Rdata){

            Rdata.departments.forEach(function(department, i){
              if(department.name !== curUser.department.name){
                var option = document.createElement('option')
                option.value = department.id
                option.innerHTML = department.name
                $('#WorkGroupDepartment').append(option)
              }

            })
          })
          document.getElementById('active').checked = 1
        })  

        //Clear dept form when click on the dept tab
        $('#deptTab').click(function(){
          $('#deptName').val('')
          $('#status').val('Active')
          $('.error').html('')
        })  

        //reload when chick on user list
        $('#userListTab').click(function(){
          location.reload()
        })  
        

        //Creating table for user list
        $('#horMenuList li').removeClass('active');
        $('#userNav').addClass('active');

        var table = document.createElement('table')
        table.id = 'user'
        table.className = 'table table-striped'
          var tr = document.createElement('tr')
          var arrayField = ['Name', 'Email', 'Title','Role', 'Active', 'On Schedule']

          arrayField.forEach(function(field){
            
            var td = document.createElement('td')
            td.appendChild(document.createTextNode(field))
            tr.appendChild(td)
          })
          table.appendChild(tr)


          $.post('/users/userList',{
            departmentId:curUser.department.id
          }).done(function(Rdata){

            console.log(JSON.stringify(Rdata, null, 4))
            Rdata.users.forEach(function(user){
              var tr = document.createElement('tr')
                arrayField = [user.name, user.email, user.title, user.role, user.active, user.schedule]
                arrayField.forEach(function(field, i){

                  var td = document.createElement('td')
                  td.appendChild(document.createTextNode(field))

                  if(i==0){
                      console.log(td)
                    td.addEventListener('click', function(){
                      console.log(td)
                      if (td.childNodes.length >2){
                        td.removeChild(td.childNodes[0])
                        td.removeChild(td.childNodes[1])
                      }

                      var span = document.createElement('span')
                      
                      span.style.color = 'red'
                      span.className = "glyphicon glyphicon-remove-circle"
                      span.id = 'delGly';
                      //- click the 'x' to remove from list
                      span.addEventListener('click', function(){
                        $.post('/users/delUser',{userId:user.id}).done(function(pData){
                          table.removeChild(tr)
                        });
                        
                      });
                      
                      //- td.insertBefore(span, td.firstChild)
                      var span1 = document.createElement('span')
                      
                      span1.style.color = 'violet'
                      span1.className = "glyphicon glyphicon-edit"
                      span1.id = 'editGly';
                      //- click the 'x' to remove from list
                      span1.addEventListener('click', function(){
                          $('#role').empty()
                          var lesserRole = roleRankLesser(user.role, 'User')
                          var adminOpt = document.getElementById('role')
                          lesserRole.forEach(function(item, i){

                            var option = document.createElement("option");
                            option.text = item
                            option.value = item

                            adminOpt.add(option)
                          })
                              
                          

                          $('#editGly').remove()
                        //- $.post('/users/editUserForm',{userId:user.id}).done(function(){
                          //- alert(JSON.stringify(user,null,4))
                          $('#userListTab').attr('class', '')
                          $('#userFormTab').attr('class', 'active')
                          $('#userList').attr('class', 'tab-pane')
                          $('#userForm').attr('class', 'tab-pane fade in active')
                          
                          $('#name').val(user.name)
                          $('#lastname').val(user.lastname)
                          $('#id').val(user.id)
                          $('#email').val(user.email)
                          $('#username').val(user.username)
                          $('#password').val('')
                          $('#title').val(user.title)
                          $('#role').val(user.role)
                          $('#passreset').attr('disabled', false)
                          
                          //- if(curUser.department.name ==='ADMIN' && $('#btnEditDept').length <1){
                            //- var span = document.createElement('span')
                            //-   var btnEditDept = document.createElement('input')
                            //-   btnEditDept.type = 'button'
                            //-   btnEditDept.id = 'btnEditDept'
                            //-   btnEditDept.value = 'Edit'
                            //-   btnEditDept.className = 'btn btn-success'
                            //-   btnEditDept.addEventListener('click', function(){
                          $.getJSON('/users/getDept').done(function(Rdata){
                            $('#department').html('')
                            var optionInit = document.createElement('option')
                            optionInit.value = user.department.id
                            optionInit.innerHTML = user.department.name
                            $('#department').append(optionInit)
                            Rdata.departments.forEach(function(department, i){
                              if(department.name !== user.department.name){
                                var option = document.createElement('option')
                                option.value = department.id
                                option.innerHTML = department.name
                                $('#department').append(option)
                              }

                            })
                          })
                            //-   })
                            //-   span.appendChild(btnEditDept)
                            //- $('#deptInput').append(span)
                          //- }

                          document.getElementById('active').checked = user.active
                          document.getElementById('role').checked = user.role
                          document.getElementById('onSchedule').checked = user.schedule
                        //- });
                      });
                      td.appendChild(span1)
                    })
                    td.addEventListener('mouseleave',function(){
                      //- alert($('#delGly').length)
                      if ($('#delGly').length>0){
                        td.removeChild(document.getElementById('delGly'))
                      }
                      if ($('#editGly').length>0){
                        td.removeChild(document.getElementById('editGly'))
                      }
                    })
                  }
                  tr.appendChild(td)        
                })
              table.appendChild(tr)
            })
          })
        userList.appendChild(table)
      }
    })